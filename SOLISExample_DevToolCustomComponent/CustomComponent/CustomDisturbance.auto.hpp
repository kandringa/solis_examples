// Automatically generated by Advanced Solutions Inc. MAXDevTool 2018c
// 
// ============================================================================
// 
// A custom file header for this custom project
// 
// ============================================================================
//     

#ifndef __CUSTOMDISTURBANCE_INSIDE_CLASS_AUTO_HPP__

#ifndef __CUSTOMDISTURBANCE_AUTO_HPP__
#define __CUSTOMDISTURBANCE_AUTO_HPP__

#include "ComponentBase.hpp"
#include "ComponentFactory.hpp"
#include "FswCmdMgr.hpp"
#include "FswCmdTableMgr.hpp"
#include "FswTlmMgr.hpp"
#include "FswTlmMaster.hpp"
#include "FswTlmTableMgr.hpp"
#include "Fsw_MathLib.hpp"

#ifndef __CIFFOB_EPHEMTABLE_HPP__
#include "IFFOB_EphemTable.auto.hpp"
#endif /* __CIFFOB_EPHEMTABLE_HPP__ */

#ifndef __CIFFOB_TARGET_HPP__
#include "IFFOB_Target.auto.hpp"
#endif /* __CIFFOB_TARGET_HPP__ */

#ifndef __CIFFSW_ATTDETERMINATION_HPP__
#include "IFFSW_AttDetermination.auto.hpp"
#endif /* __CIFFSW_ATTDETERMINATION_HPP__ */

#ifndef __CIFFSW_EPHEMERIS_HPP__
#include "IFFSW_Ephemeris.auto.hpp"
#endif /* __CIFFSW_EPHEMERIS_HPP__ */

#ifndef __CIFMYINTERFACE_HPP__
#include "IFMyInterface.auto.hpp"
#endif /* __CIFMYINTERFACE_HPP__ */

#ifndef __CIFODY_DISTURBANCE_HPP__
#include "IFODY_Disturbance.auto.hpp"
#endif /* __CIFODY_DISTURBANCE_HPP__ */

#ifndef __CIFUTL_CENTRALBODY_HPP__
#include "IFUTL_CentralBody.auto.hpp"
#endif /* __CIFUTL_CENTRALBODY_HPP__ */

#ifndef __CIFUTL_GRAVITYMODEL_HPP__
#include "IFUTL_GravityModel.auto.hpp"
#endif /* __CIFUTL_GRAVITYMODEL_HPP__ */

#ifndef __CIFUTL_MAGFIELD_HPP__
#include "IFUTL_MagField.auto.hpp"
#endif /* __CIFUTL_MAGFIELD_HPP__ */

#ifndef __CIFUTL_PROPAGATOR_HPP__
#include "IFUTL_Propagator.auto.hpp"
#endif /* __CIFUTL_PROPAGATOR_HPP__ */

#ifndef MATHTYPES_HPP
#include "MathTypes.hpp"
#endif /* MATHTYPES_HPP */

#ifndef __NS_MYNAMESPACE_HPP__
#include "NSMyNamespace.auto.hpp"
#endif /* __NS_MYNAMESPACE_HPP__ */

// Factory name definition/declaration
#define CCUSTOMDISTURBANCE_COMPONENT "CustomDisturbance"

// This is always defined so that generation can bounce between legacy and full output modes.
#define AUTOCODE_SOURCE_MACRO_CUSTOMDISTURBANCE \


#endif /* __CUSTOMDISTURBANCE_AUTO_HPP__ */

#else /* defined: __CUSTOMDISTURBANCE_INSIDE_CLASS_AUTO_HPP__ */

#ifndef __CUSTOMDISTURBANCE_CLASS_AUTO_HPP__
#define __CUSTOMDISTURBANCE_CLASS_AUTO_HPP__

// #StartFunctionDefinitions

   private:
      typedef CComponentFactory< CCustomDisturbance, CConfigConfigurableObj > TFactory;

      static TFactory* s_Factory;

   protected:
      struct SCustomDisturbanceParm
      {
         SCustomDisturbanceParm(void)
         {
            V_ConstantDisturbance_Nm[0] = 0.0;
            V_ConstantDisturbance_Nm[1] = 0.0;
            V_ConstantDisturbance_Nm[2] = 0.0;
            E_MyEnum                    = (MyNamespace::EMyEnum) 0;
         }
         MyNamespace::EMyEnum E_MyEnum;
         VECTOR               V_ConstantDisturbance_Nm;
      };

      struct SCustomDisturbanceParm& m_Parm;
      struct SCustomDisturbanceParm* m_Parm_ptr;

      // The telemetry structure
      struct SCustomDisturbanceTlm
      {
         VECTOR MyTorque_Nm; /* N*m # My custom torque vector */
      };
      
      struct SCustomDisturbanceTlm& m_Tlm;
      struct SCustomDisturbanceTlm* m_Tlm_ptr;
      
      struct SCustomDisturbanceConnection
      {
         SCustomDisturbanceConnection(void)
         {
            FSW_Ephemeris_ptr        = NULL;
            FSW_AttDetermination_ptr = NULL;
         }
         CIFFSW_AttDetermination* FSW_AttDetermination_ptr;
         CIFFSW_Ephemeris*        FSW_Ephemeris_ptr;
      };

      SCustomDisturbanceConnection& m_Connection;
      SCustomDisturbanceConnection* m_Connection_ptr;

      struct SCustomDisturbanceData
      {
         SCustomDisturbanceData(void)
         {
            DataA    = 0.0;
            DataB    = C_QId;
            MyEnum   = MyNamespace::E_AAA;
            MyStruct = NULL;
         }
         double                 DataA;
         MyNamespace::EMyEnum   MyEnum;
         MyNamespace::MyStruct* MyStruct;
         QUATERNION             DataB;
      };

      SCustomDisturbanceData& m_Data;
      SCustomDisturbanceData* m_Data_ptr;

   public:
      // Constructor and Destructor Prototypes.
      CCustomDisturbance(const char* InstanceName);
      CCustomDisturbance(const char* InstanceName, SCustomDisturbanceParm& Parm, SCustomDisturbanceTlm& Tlm, SCustomDisturbanceConnection& Connection, SCustomDisturbanceData& Data);
      virtual ~CCustomDisturbance(void);
      void CommonConstructor(void);
      void AutogeneratedConstructor(void);
      void AutogeneratedDestructor(void);

      // Factory creation and destruction Prototypes.
      static void CreateFactory(void);
      static void DestroyFactory(void);
      static void UserCreateFactory(void);

      // The mutator functions are the functions that are called to set values in memory.
      void SetConnection_FSW_AttDetermination(const CIFFSW_AttDetermination* var) { m_Connection.FSW_AttDetermination_ptr = const_cast<CIFFSW_AttDetermination*>(var); }
      void SetConnection_FSW_Ephemeris(const CIFFSW_Ephemeris* var)               { m_Connection.FSW_Ephemeris_ptr = const_cast<CIFFSW_Ephemeris*>(var); }
      void SetE_MyEnum(INT32 var)                                                 { m_Parm.E_MyEnum = (MyNamespace::EMyEnum) var; }
      void SetV_ConstantDisturbance_Nm(VECTOR var)                                { m_Parm.V_ConstantDisturbance_Nm = var; }

      // The accessor functions are the functions that are called to return pointers to interfaces.
      #ifdef INCLUDE_ALL_ACCESSORS
      void   GetV_ConstantDisturbance_Nm(VECTOR& var) const           { var = m_Parm.V_ConstantDisturbance_Nm; }
      #endif /* INCLUDE_ALL_ACCESSORS */
      #ifdef INCLUDE_ALL_ACCESSORS
      void   GetE_MyEnum(INT32& var) const                            { var = (INT32)m_Parm.E_MyEnum; }
      #endif /* INCLUDE_ALL_ACCESSORS */
      void   GetODY_Disturbance(const CIFODY_Disturbance*& var) const { var = this; }
      void   GetMyInterface(const CIFMyInterface*& var) const         { var = this; }

      // Common Functions
      virtual void  Init(void);
      void AutogeneratedInit(void);
      virtual void  PostInit(void);
      void AutogeneratedPostInit(void);
      void PopulateTlmMaster(CFswTlmTableMgr& TableMgr);
      void PopulateTlm(CFswTlmTableMgr& TableMgr, UINT16 mLocalAPID);
      virtual void  PopulateTlmTables(CFswTlmTableMgr& TableMgr);
      virtual int   ProcessOutputs(void);
      virtual int   ProcessInputs(void);
      virtual int   Iterate(double DeltaTime);
      virtual void  WriteConfig(INT32 Id, std::ostream& Out);

      static  E_FSW_STATUS PopulateMutatorMap(TMutatorMap& Map);
      static  E_FSW_STATUS PopulateAccessorMap(TAccessorMap& Map);
      static  E_FSW_STATUS PopulateFuncMap(TFuncMap& Map);

      // Interface Classes and Functions
      virtual const VECTOR GetLocation_BDY_m(void);
      virtual const VECTOR GetForce_BDY_N(void);
      virtual const VECTOR GetTorque_BDY_Nm(void);

      virtual const double           GetDataA(void);
      virtual const QUATERNION       GetDataB(void);
      virtual MyNamespace::EMyEnum   GetMyEnum(void);
      virtual MyNamespace::MyStruct* GetMyStruct(void);

   private:

// #EndFunctionDefinitions

#define INCLUDE_CCUSTOMDISTURBANCE_SECOND_CONSTRUCTOR

#endif /* __CUSTOMDISTURBANCE_CLASS_AUTO_HPP__ */

#endif /* defined: __CUSTOMDISTURBANCE_INSIDE_CLASS_AUTO_HPP__ */
