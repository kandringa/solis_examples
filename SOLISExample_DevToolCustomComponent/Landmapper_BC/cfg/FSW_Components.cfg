############################################
## FSW_Components.cfg
############################################

ifdef SECTION_CREATE

	select sub_system_adcs
	{
		create FSW_ActProc_MT FSW_ActProc_MT_Magnetic_Torquers_Set;
		create FSW_ActProc_RW FSW_ActProc_RW_Reaction_Wheels_Set;
		create FSW_AttDetermination FSW_AttDetermination;
		create FSW_Ctrl_Attitude FSW_Ctrl_Attitude;
		create FSW_Ctrl_ErrorGen FSW_Ctrl_ErrorGen;
		create FSW_Ctrl_FeedForward FSW_Ctrl_FeedForward;
		create FSW_Ctrl_Mix FSW_Ctrl_Mix;
		create FSW_Ctrl_Momentum FSW_Ctrl_Momentum;
		create FSW_Ephemeris FSW_Ephemeris;
		create FSW_Guidance FSW_Guidance;
		create FSW_ModeController FSW_ModeController;
		create FSW_SenProc_GPS FSW_SenProc_GPS;
		create FSW_SenProc_MAG FSW_SenProc_MAG;
		create FSW_SenProc_RTE FSW_SenProc_RTE;
		create FSW_SenProc_STR FSW_SenProc_STR;
		create FSW_SenProc_SUN FSW_SenProc_SUN;
		create FSW_VehicleState FSW_VehicleState;
		create MGR_ODySSy MGR_ODySSy;
	}

	select sub_system_cmdtlm
	{
		create cmd_history_master cmd_hist;
		create cmd_tlm_db cmd_tlm_db;
		create event_reporting event_reporting;
		create last_stored_tlm last_stored_tlm;
		create misc misc;
		create basic_heap rec_packet_heap;
		create recorded_packet_tlm rec_packet_payload;
		create tlm_eu_adapter tlm_mon_eu_adapter;
		create fpu_subsystem_mon tlm_mon_fp;
	}

	select sub_system_seqeng
	{
		create flight_jas fj;
		create basic_heap fj_heap;
	}

endif


ifdef SECTION_CONNECT

	select fj
	{
		heap = fj_heap.heap;
		last_stored_tlm = last_stored_tlm.last_stored_tlm;
	}

	select FSW_ActProc_MT_Magnetic_Torquers_Set
	{
		Connection_FSC_ActProc_MT[0] = FSC_ActProc_MT_MagCoil_Py.FSC_ActProc_MT;
		Connection_FSC_ActProc_MT[1] = FSC_ActProc_MT_MagCoil_Mz.FSC_ActProc_MT;
		Connection_FSC_ActProc_MT[2] = FSC_ActProc_MT_MagCoil_Px.FSC_ActProc_MT;
		Connection_FSC_ActProc_MT[3] = FSC_ActProc_MT_MagCoil_Mx.FSC_ActProc_MT;
		Connection_FSC_ActProc_MT[4] = FSC_ActProc_MT_MagCoil_My.FSC_ActProc_MT;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_MAG = FSW_SenProc_MAG.FSW_SenProc_MAG;
	}

	FSW_ActProc_RW_Reaction_Wheels_Set.Connection_HWR_ActMgr_RW = HWR_ActMgr_RW.HWR_ActMgr_RW;

	select FSW_AttDetermination
	{
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_RTE = FSW_SenProc_RTE.FSW_SenProc_RTE;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select FSW_Ctrl_Attitude
	{
		Connection_FSW_Ctrl_ErrorGen = FSW_Ctrl_ErrorGen.FSW_Ctrl_ErrorGen;
		Connection_FSW_Ctrl_FeedForward = FSW_Ctrl_FeedForward.GEN_TorqueVector;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
		Connection_FSW_VehicleState = FSW_VehicleState.FSW_VehicleState;
	}

	select FSW_Ctrl_ErrorGen
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
	}

	select FSW_Ctrl_FeedForward
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
		Connection_FSW_VehicleState = FSW_VehicleState.FSW_VehicleState;
	}

	select FSW_Ctrl_Mix
	{
		Connection_AvailableCtrlActSets[0] = FSW_ActProc_RW_Reaction_Wheels_Set.FSW_ActProc_TrqCmd;
		Connection_AvailableCtrlActSets[1] = FSW_ActProc_MT_Magnetic_Torquers_Set.FSW_ActProc_TrqCmd;
		Connection_GEN_ControllerTrqCmd[0] = FSW_Ctrl_Attitude.GEN_ControllerTrqCmd;
		Connection_GEN_ControllerTrqCmd[1] = FSW_Ctrl_Momentum.GEN_ControllerTrqCmd;
	}

	select FSW_Ctrl_Momentum
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
		Connection_FSW_VehicleState = FSW_VehicleState.FSW_VehicleState;
	}

	select FSW_Ephemeris
	{
		Connection_EarthCelestialBody = UTL_CelestialBody_Earth.UTL_CentralBody;
		Connection_FOB_EphemTable = FOB_EphemTable.FOB_EphemTable;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_SenProc_GPS = FSW_SenProc_GPS.FSW_SenProc_GPS;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select FSW_Guidance
	{
		Connection_FSC_Gui_Mode[0] = FSC_Gui_Idle.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[1] = FSC_Gui_Hold.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[2] = FSC_Gui_RateDamp.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[3] = FSC_Gui_SunAcq.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[4] = FSC_Gui_Tracking.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[5] = FSC_Gui_EigenSlew.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[6] = FSC_Gui_RendezSlew.FSC_Gui_Mode;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
	}

	select FSW_ModeController
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
		Connection_SeqControl = fj.seq_control;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
		container_CelestialBody_data = UTL_FSWInitialConditions.container_celestialbody_data;
	}

	select FSW_SenProc_GPS
	{
		Connection_FSC_SenProc_GPS[0] = FSC_SenProc_GPS_GPS.FSC_SenProc_GPS;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_HWR_SenMgr_GPS = HWR_SenMgr_GPS.HWR_SenMgr_GPS;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select FSW_SenProc_MAG
	{
		Connection_FSC_SenProc_MAG[0] = FSC_SenProc_MAG_Mag_FCHMC.FSC_SenProc_MAG;
		Connection_FSW_ActProc_MT[0] = FSW_ActProc_MT_Magnetic_Torquers_Set.FSW_ActProc_MT;
		Connection_HWR_SenMgr_MAG = HWR_SenMgr_MAG.HWR_SenMgr_MAG;
	}

	select FSW_SenProc_RTE
	{
		Connection_FSC_SenProc_RTE[0] = FSC_SenProc_RTE_MPU_X.FSC_SenProc_RTE;
		Connection_FSC_SenProc_RTE[1] = FSC_SenProc_RTE_MPU_Y.FSC_SenProc_RTE;
		Connection_FSC_SenProc_RTE[2] = FSC_SenProc_RTE_MPU_Z.FSC_SenProc_RTE;
		Connection_HWR_SenMgr_RTE = HWR_SenMgr_RTE.HWR_SenMgr_RTE;
	}

	select FSW_SenProc_STR
	{
		Connection_FSC_SenProc_STR[0] = FSC_SenProc_STR_Sinclair_STR.FSC_SenProc_STR;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_HWR_SenMgr_STR = HWR_SenMgr_STR.HWR_SenMgr_STR;
	}

	select FSW_SenProc_SUN
	{
		Connection_FSC_SenProc_SUN[0] = FSC_SenProc_SUN_SunSens_Mx.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[1] = FSC_SenProc_SUN_SunSens_Px.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[2] = FSC_SenProc_SUN_SunSens_My.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[3] = FSC_SenProc_SUN_SunSens_Py.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[4] = FSC_SenProc_SUN_SunSens_Mz.FSC_SenProc_SUN;
		Connection_HWR_SenMgr_SUN = HWR_SenMgr_SUN.HWR_SenMgr_SUN;
	}

	select FSW_VehicleState
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ctrl_Attitude = FSW_Ctrl_Attitude.FSW_Ctrl_Attitude;
		Connection_FSW_Ctrl_ErrorGen = FSW_Ctrl_ErrorGen.FSW_Ctrl_ErrorGen;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_SUN[0] = FSW_SenProc_SUN.FSW_SenProc_SUN;
		Connection_HWR_ActMgr_RW = HWR_ActMgr_RW.HWR_ActMgr_RW;
		Connection_MomentumCmd_BDY = FSW_Ctrl_Momentum.MomentumCmd;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select MGR_ODySSy
	{
		Connection_MGR_ODySSy[0] = FSW_AttDetermination.MGR_ODySSy;
		Connection_MGR_ODySSy[1] = FSW_Ephemeris.MGR_ODySSy;
		Connection_MGR_ODySSy[2] = FSW_VehicleState.MGR_ODySSy;
		Connection_MGR_ODySSy[3] = HWR_ActMgr_RW.MGR_ODySSy;
		Connection_MGR_ODySSy[4] = HWR_ActMgr_MT.MGR_ODySSy;
		Connection_MGR_ODySSy[5] = HWR_SenMgr_RTE.MGR_ODySSy;
		Connection_MGR_ODySSy[6] = HWR_SenMgr_SUN.MGR_ODySSy;
		Connection_MGR_ODySSy[7] = HWR_SenMgr_MAG.MGR_ODySSy;
		Connection_MGR_ODySSy[8] = HWR_SenMgr_STR.MGR_ODySSy;
		Connection_MGR_ODySSy[9] = HWR_SenMgr_GPS.MGR_ODySSy;
	}

	rec_packet_payload.heap = rec_packet_heap.heap;

	tlm_mon_eu_adapter.last_stored_tlm = last_stored_tlm.last_stored_tlm;

	select tlm_mon_fp
	{
		cmd_fj_engine = fj.seq_control;
		last_stored_tlm = last_stored_tlm.last_stored_tlm;
	}

endif


ifdef SECTION_0

	select cmd_hist
	{
		msg_q_depth = 200;
		msg_q_create_flags = 0;
		cmd_hist_depth = 100;
		cmd_hist_max_text_bytes = 255;
		cmd_hist_temp_dir = "../rec_tlm/cmd_hist/";
		cmd_hist_file_dir = "../rec_tlm/cmd_hist/not_sent/";
		cmd_hist_auto_dump_active = 1;
		create_evrs = 1;
	}

	select cmd_tlm_db
	{
		dir = "../cmd_tlm_db";
	}

	select event_reporting
	{
		add_level(1);
		add_level(2);
		add_level(3);
		add_level(4);
		add_level(5);
		add_level(6);
		add_level(7);
		add_level(8);
		add_level(9);
	}

	select fj
	{
		cmd_file_dir = "../seq/";
		engine_apid_base = 9010;
		num_engines = 50;
	}

	select FSW_ActProc_MT_Magnetic_Torquers_Set
	{
		D_TotalMagneticPeriod_s = 1.0e+1;
		D_QuiescentPeriod_s = 1.0e+0;
		B_QuiescentIfMTOff = 1;
		D_PulseWidthPeriod_s = 1.0e+0;
		D_MeasurementTimeout_s = 6.0e+1;
		E_MagFieldSource = 0; # 0: MagModelOnly, 1: MagMeasurementOnly, 2: BothModelAndMagnetometer
		E_MTCmdMode = 1; # 0: Constant, 1: Dynamic
		B_ActuatorEnabled[0] = 1;
		B_ActuatorEnabled[1] = 1;
		B_ActuatorEnabled[2] = 1;
		B_ActuatorEnabled[3] = 1;
		B_ActuatorEnabled[4] = 1;
	}

	select FSW_ActProc_RW_Reaction_Wheels_Set
	{
		E_WheelSpeedState = 0; # 0: BYPASS, 1: COMPENSATE, 2: GOTO_SPEED, 3: HOLD_SPEED, 4:SPD_EXTERNAL
		WheelsInSet("RW_Px", FSC_ActProc_RW_RW_Px.FSC_ActProc_RW, 1, 0.0e+0); # WheelName, FSC_ActProc_RW Interface, B_ActuatorEnabled,D_NullVecComponent
		WheelsInSet("RW_Py", FSC_ActProc_RW_RW_Py.FSC_ActProc_RW, 1, 0.0e+0); # WheelName, FSC_ActProc_RW Interface, B_ActuatorEnabled,D_NullVecComponent
		WheelsInSet("RW_Mz", FSC_ActProc_RW_RW_Mz.FSC_ActProc_RW, 1, 0.0e+0); # WheelName, FSC_ActProc_RW Interface, B_ActuatorEnabled,D_NullVecComponent
	}

	select FSW_AttDetermination
	{
		E_FilterLevel = 2; # 0: Perfect-AD, 1: Fixed-Gain, 2: Kalman Filter
		I_InitFramesReq = 2;
		D_InitMeasTimeWindow_s = 1.0e+1;
		D_InitSensorPersistDur_s = 1.0e+0;
		D_InitAttConsist_rd = 1.74532925199433e-1;
		D_InitReqSepAngle_rd = 5.23598775598299e-1;
		D_EstRateBiasLim_rdps = 8.72664625997165e-2;
		D_InitAttCov_rd = 1.74532925199433e-2;
		D_InitRateBiasCov_rdps = 1.74532925199433e-2;
		D_RateMeasNoise_rdps = 2.61799387799149e-4;
		D_RateDriftMeasNoise_rdpsrthr = 3.49065850398866e-7;
		Q_InitUndetAtt = [ 0.0e+0 0.0e+0 0.0e+0 1.0e+0 ];
		B_EnableRateBiasEst = 1;
		D_RateBiasTimeConst_s = 1.0e+2;
		B_UseForInit[0] = 1; # SunSens_Mx
		D_TimeConst_s[0] = 0.0e+0; # SunSens_Mx: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[0] = 1.74532925199433e-3; # SunSens_Mx: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[0] = 1.74532925199433e-3; # SunSens_Mx: Kalman Filter Variable
		D_ResidLimit_rd[0] = 1.74532925199433e-1; # SunSens_Mx: Kalman Filter Variable
		D_AttGainLim[0] = 1.0e+0; # SunSens_Mx: Kalman Filter Variable
		D_RBGainLim[0] = 1.0e+0; # SunSens_Mx: Kalman Filter Variable
		E_IncorpMethod[0] = 0; # SunSens_Mx: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[1] = 1; # SunSens_Px
		D_TimeConst_s[1] = 0.0e+0; # SunSens_Px: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[1] = 1.74532925199433e-3; # SunSens_Px: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[1] = 1.74532925199433e-3; # SunSens_Px: Kalman Filter Variable
		D_ResidLimit_rd[1] = 1.74532925199433e-1; # SunSens_Px: Kalman Filter Variable
		D_AttGainLim[1] = 1.0e+0; # SunSens_Px: Kalman Filter Variable
		D_RBGainLim[1] = 1.0e+0; # SunSens_Px: Kalman Filter Variable
		E_IncorpMethod[1] = 0; # SunSens_Px: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[2] = 1; # SunSens_My
		D_TimeConst_s[2] = 0.0e+0; # SunSens_My: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[2] = 1.74532925199433e-3; # SunSens_My: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[2] = 1.74532925199433e-3; # SunSens_My: Kalman Filter Variable
		D_ResidLimit_rd[2] = 1.74532925199433e-1; # SunSens_My: Kalman Filter Variable
		D_AttGainLim[2] = 1.0e+0; # SunSens_My: Kalman Filter Variable
		D_RBGainLim[2] = 1.0e+0; # SunSens_My: Kalman Filter Variable
		E_IncorpMethod[2] = 0; # SunSens_My: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[3] = 1; # SunSens_Py
		D_TimeConst_s[3] = 0.0e+0; # SunSens_Py: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[3] = 1.74532925199433e-3; # SunSens_Py: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[3] = 1.74532925199433e-3; # SunSens_Py: Kalman Filter Variable
		D_ResidLimit_rd[3] = 1.74532925199433e-1; # SunSens_Py: Kalman Filter Variable
		D_AttGainLim[3] = 1.0e+0; # SunSens_Py: Kalman Filter Variable
		D_RBGainLim[3] = 1.0e+0; # SunSens_Py: Kalman Filter Variable
		E_IncorpMethod[3] = 0; # SunSens_Py: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[4] = 1; # SunSens_Mz
		D_TimeConst_s[4] = 0.0e+0; # SunSens_Mz: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[4] = 1.74532925199433e-3; # SunSens_Mz: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[4] = 1.74532925199433e-3; # SunSens_Mz: Kalman Filter Variable
		D_ResidLimit_rd[4] = 1.74532925199433e-1; # SunSens_Mz: Kalman Filter Variable
		D_AttGainLim[4] = 1.0e+0; # SunSens_Mz: Kalman Filter Variable
		D_RBGainLim[4] = 1.0e+0; # SunSens_Mz: Kalman Filter Variable
		E_IncorpMethod[4] = 0; # SunSens_Mz: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[5] = 1; # Mag_FCHMC
		D_TimeConst_s[5] = 1.8e+3; # Mag_FCHMC: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[5] = 1.74532925199433e-2; # Mag_FCHMC: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[5] = 1.74532925199433e-2; # Mag_FCHMC: Kalman Filter Variable
		D_ResidLimit_rd[5] = 1.74532925199433e-1; # Mag_FCHMC: Kalman Filter Variable
		D_AttGainLim[5] = 1.0e+0; # Mag_FCHMC: Kalman Filter Variable
		D_RBGainLim[5] = 1.0e+0; # Mag_FCHMC: Kalman Filter Variable
		E_IncorpMethod[5] = 1; # Mag_FCHMC: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[6] = 1; # Sinclair_STR
		D_TimeConst_s[6] = 1.0e+0; # Sinclair_STR: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[6] = 2.66647523252766e-4; # Sinclair_STR: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[6] = 2.4240668541439e-5; # Sinclair_STR: Kalman Filter Variable
		D_ResidLimit_rd[6] = 1.74532925199433e-1; # Sinclair_STR: Kalman Filter Variable
		D_AttGainLim[6] = 1.0e+0; # Sinclair_STR: Kalman Filter Variable
		D_RBGainLim[6] = 1.0e+0; # Sinclair_STR: Kalman Filter Variable
		E_IncorpMethod[6] = 2; # Sinclair_STR: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		ADSensors("SunSens_Mx", FSC_SenProc_SUN_SunSens_Mx.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Px", FSC_SenProc_SUN_SunSens_Px.FSW_SenProc_ADSensor);
		ADSensors("SunSens_My", FSC_SenProc_SUN_SunSens_My.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Py", FSC_SenProc_SUN_SunSens_Py.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Mz", FSC_SenProc_SUN_SunSens_Mz.FSW_SenProc_ADSensor);
		ADSensors("Mag_FCHMC", FSC_SenProc_MAG_Mag_FCHMC.FSW_SenProc_ADSensor);
		ADSensors("Sinclair_STR", FSC_SenProc_STR_Sinclair_STR.FSW_SenProc_ADSensor);
	}

	select FSW_Ephemeris
	{
		Q_TODtoJ2000 = [ -2.00485613309735e-5 -8.36628103438893e-4 1.92552571049745e-3 9.99997795998676e-1 ];
		D_MaxPropagationTime_s = 1.08e+4;
		B_AllowBackProp = 1;
		B_IncludeNonGravAcc = 0;
		E_EphemSource = 1; # 0: Table, 1: GPS
		AddEphemTarget("GeneralTarget", FOB_Target_GeneralTarget.FOB_Target);
		AddEphemTarget("OrbitTarget", FOB_Target_OrbitTarget.FOB_Target);
	}

	select FSW_ModeController
	{
		B_InitRateDampOnAcq = 0;
		S_InitAttDetSeq = "";
		S_InitAttUnDetSeq = "";
		AddIdleMode("Idle");
		AddHoldMode("Hold", FOB_ModeType_Hold_Hold.FOB_ModeParms_Hold, FOB_ModeType_Hold_Hold.FOB_ModeParms_Tracking);
		AddRateDampMode("RateDamp", FOB_ModeType_RateDamp_RateDamp.FOB_ModeParms_RateDamp);
		AddSunAcqMode("SunAcq", FOB_ModeType_SunAcq_SunAcq.FOB_ModeParms_SunAcq);
		AddTrackingMode("InertialPoint", FOB_ModeType_Tracking_InertialPoint.FOB_ModeParms_Tracking);
		AddTrackingMode("SunTrack", FOB_ModeType_Tracking_SunTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("NadirTrack", FOB_ModeType_Tracking_NadirTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("VelocityTrack", FOB_ModeType_Tracking_VelocityTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("MagFieldTrack", FOB_ModeType_Tracking_MagFieldTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("TargetTrack", FOB_ModeType_Tracking_TargetTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("OrbitTrack", FOB_ModeType_Tracking_OrbitTrack.FOB_ModeParms_Tracking);
		AddEigenSlewMode("EigenSlew", FOB_Mode_SlewLimitsBdy_BodyLimits.FOB_Mode_SlewLimits);
		AddRendezSlewMode("RendezSlew", FOB_Mode_SlewLimitsBdy_BodyLimits.FOB_Mode_SlewLimits);
	}

	select FSW_SenProc_GPS
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid, 3: HighestQuality
		D_OutageTimeThreshold_s = 5.4e+3;
		D_PosErrLimUnconv_m = 1.0e+3;
		D_VelErrLimUnconv_mps = 2.5e+1;
		D_PosErrLimConv_m = 2.0e+2;
		D_VelErrLimConv_mps = 1.2e+1;
		D_PosErrGain = 2.0e-3;
		D_VelErrGain = 2.0e-3;
		D_PosErrLimOutageSlope_mps = 5.0e-1;
		D_VelErrLimOutageSlope_mps2 = 1.0e-1;
		D_MaxTimeToConverge_s = 6.0e+3;
		I_NumMeasToConverge = 15000;
		I_NumMeasToDiverge = 3000;
		I_NumMeasToRecoverOutage = 0;
	}

	select FSW_SenProc_MAG
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid, 3: HighestQuality
	}

	select FSW_SenProc_SUN
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid, 3: HighestQuality
	}

	select FSW_VehicleState
	{
		D_SunLostPersistTime_s = 1.2e+3;
		I_SunBufferSize = 3;
		D_SunBufferConsistencyAngle_rd = 5.23598775598299e-2;
		D_EclipseKOZAngle_rd = 0.0e+0;
		VehicleConfigs("Nominal", FOB_VehicleConfig.FOB_VehicleConfig);
		AttControllers("Standard", FOB_CtrlParms_Attitude_Standard.FOB_CtrlParms_Attitude);
		MomControllers("Standard", FOB_CtrlParms_Momentum_Standard.FOB_CtrlParms_Momentum);
		FfwControllers("Standard", FOB_CtrlParms_FeedForward_Standard.FOB_CtrlParms_FeedForward);
		MissionModes("NORMAL_OPS");
		MissionModes("SAFE_MODE");
	}

	select misc
	{
		config_dir = "../cfg";
	}

	select tlm_mon_eu_adapter
	{
		add_monitored_tlm(0, "CEG_ATTERR_BDYX");
		add_monitored_tlm(1, "CEG_ATTERR_BDYY");
		add_monitored_tlm(2, "CEG_ATTERR_BDYZ");
		add_monitored_tlm(3, "CEG_RATEERR_BDYX");
		add_monitored_tlm(4, "CEG_RATEERR_BDYY");
		add_monitored_tlm(5, "CEG_RATEERR_BDYZ");
		add_monitored_tlm(6, "ATD_COVAR00");
		add_monitored_tlm(7, "ATD_COVAR11");
		add_monitored_tlm(8, "ATD_COVAR22");
		add_monitored_tlm(9, "ATD_COVAR33");
		add_monitored_tlm(10, "ATD_COVAR44");
		add_monitored_tlm(11, "ATD_COVAR55");
		add_monitored_tlm(12, "VEH_TOTALMOMENTUM_BDYX");
		add_monitored_tlm(13, "VEH_TOTALMOMENTUM_BDYY");
		add_monitored_tlm(14, "VEH_TOTALMOMENTUM_BDYZ");
		add_monitored_tlm(15, "SPG_OUTAGEDUR");
		add_monitored_tlm(16, "TLM_MON_FP_FAULT");
		add_monitored_tlm(17, "OSD_RCDRSTATEPCT");
	}

	select tlm_mon_fp
	{
		condition_level_name[0] = "GREEN";
		condition_level_name[1] = "BLUE";
		condition_level_name[2] = "YELLOW";
		condition_level_name[3] = "ORANGE";
		condition_level_name[4] = "RED";
		create_cond_eu_gt_value(0, tlm_mon_eu_adapter.eu[0], "Control Error Gen AttErr_BDYX > 0.175");
		create_in_condition(0, 0, "Control Error Gen AttErr_BDYX > 0.175", "CEG_ATTERR_BDYX_GT_V0");
		create_cond_eu_lt_value(1, tlm_mon_eu_adapter.eu[0], "Control Error Gen AttErr_BDYX < -0.175");
		create_in_condition(1, 1, "Control Error Gen AttErr_BDYX < -0.175", "CEG_ATTERR_BDYX_LT_V0");
		create_cond_eu_gt_value(2, tlm_mon_eu_adapter.eu[1], "Control Error Gen AttErr_BDYY > 0.175");
		create_in_condition(2, 2, "Control Error Gen AttErr_BDYY > 0.175", "CEG_ATTERR_BDYY_GT_V0");
		create_cond_eu_lt_value(3, tlm_mon_eu_adapter.eu[1], "Control Error Gen AttErr_BDYY < -0.175");
		create_in_condition(3, 3, "Control Error Gen AttErr_BDYY < -0.175", "CEG_ATTERR_BDYY_LT_V0");
		create_cond_eu_gt_value(4, tlm_mon_eu_adapter.eu[2], "Control Error Gen AttErr_BDYZ > 0.175");
		create_in_condition(4, 4, "Control Error Gen AttErr_BDYZ > 0.175", "CEG_ATTERR_BDYZ_GT_V0");
		create_cond_eu_lt_value(5, tlm_mon_eu_adapter.eu[2], "Control Error Gen AttErr_BDYZ < -0.175");
		create_in_condition(5, 5, "Control Error Gen AttErr_BDYZ < -0.175", "CEG_ATTERR_BDYZ_LT_V0");
		create_cond_eu_gt_value(6, tlm_mon_eu_adapter.eu[3], "Control Error Gen RateErr_BDYX > 0.0175");
		create_in_condition(6, 6, "Control Error Gen RateErr_BDYX > 0.0175", "CEG_RATEERR_BDYX_GT_V0");
		create_cond_eu_lt_value(7, tlm_mon_eu_adapter.eu[3], "Control Error Gen RateErr_BDYX < -0.0175");
		create_in_condition(7, 7, "Control Error Gen RateErr_BDYX < -0.0175", "CEG_RATEERR_BDYX_LT_V0");
		create_cond_eu_gt_value(8, tlm_mon_eu_adapter.eu[4], "Control Error Gen RateErr_BDYY > 0.0175");
		create_in_condition(8, 8, "Control Error Gen RateErr_BDYY > 0.0175", "CEG_RATEERR_BDYY_GT_V0");
		create_cond_eu_lt_value(9, tlm_mon_eu_adapter.eu[4], "Control Error Gen RateErr_BDYY < -0.0175");
		create_in_condition(9, 9, "Control Error Gen RateErr_BDYY < -0.0175", "CEG_RATEERR_BDYY_LT_V0");
		create_cond_eu_gt_value(10, tlm_mon_eu_adapter.eu[5], "Control Error Gen RateErr_BDYZ > 0.0175");
		create_in_condition(10, 10, "Control Error Gen RateErr_BDYZ > 0.0175", "CEG_RATEERR_BDYZ_GT_V0");
		create_cond_eu_lt_value(11, tlm_mon_eu_adapter.eu[5], "Control Error Gen RateErr_BDYZ < -0.0175");
		create_in_condition(11, 11, "Control Error Gen RateErr_BDYZ < -0.0175", "CEG_RATEERR_BDYZ_LT_V0");
		create_cond_eu_gt_value(12, tlm_mon_eu_adapter.eu[6], "AD_Details Covar00 > 0.31");
		create_in_condition(12, 12, "AD_Details Covar00 > 0.31", "ATD_COVAR00_GT_V0");
		create_cond_eu_lt_value(13, tlm_mon_eu_adapter.eu[6], "AD_Details Covar00 < 0");
		create_in_condition(13, 13, "AD_Details Covar00 < 0", "ATD_COVAR00_LT_V0");
		create_cond_eu_gt_value(14, tlm_mon_eu_adapter.eu[7], "AD_Details Covar11 > 0.31");
		create_in_condition(14, 14, "AD_Details Covar11 > 0.31", "ATD_COVAR11_GT_V0");
		create_cond_eu_lt_value(15, tlm_mon_eu_adapter.eu[7], "AD_Details Covar11 < 0");
		create_in_condition(15, 15, "AD_Details Covar11 < 0", "ATD_COVAR11_LT_V0");
		create_cond_eu_gt_value(16, tlm_mon_eu_adapter.eu[8], "AD_Details Covar22 > 0.31");
		create_in_condition(16, 16, "AD_Details Covar22 > 0.31", "ATD_COVAR22_GT_V0");
		create_cond_eu_lt_value(17, tlm_mon_eu_adapter.eu[8], "AD_Details Covar22 < 0");
		create_in_condition(17, 17, "AD_Details Covar22 < 0", "ATD_COVAR22_LT_V0");
		create_cond_eu_gt_value(18, tlm_mon_eu_adapter.eu[9], "AD_Details Covar33 > 0.31");
		create_in_condition(18, 18, "AD_Details Covar33 > 0.31", "ATD_COVAR33_GT_V0");
		create_cond_eu_lt_value(19, tlm_mon_eu_adapter.eu[9], "AD_Details Covar33 < 0");
		create_in_condition(19, 19, "AD_Details Covar33 < 0", "ATD_COVAR33_LT_V0");
		create_cond_eu_gt_value(20, tlm_mon_eu_adapter.eu[10], "AD_Details Covar44 > 0.31");
		create_in_condition(20, 20, "AD_Details Covar44 > 0.31", "ATD_COVAR44_GT_V0");
		create_cond_eu_lt_value(21, tlm_mon_eu_adapter.eu[10], "AD_Details Covar44 < 0");
		create_in_condition(21, 21, "AD_Details Covar44 < 0", "ATD_COVAR44_LT_V0");
		create_cond_eu_gt_value(22, tlm_mon_eu_adapter.eu[11], "AD_Details Covar55 > 0.31");
		create_in_condition(22, 22, "AD_Details Covar55 > 0.31", "ATD_COVAR55_GT_V0");
		create_cond_eu_lt_value(23, tlm_mon_eu_adapter.eu[11], "AD_Details Covar55 < 0");
		create_in_condition(23, 23, "AD_Details Covar55 < 0", "ATD_COVAR55_LT_V0");
		create_cond_eu_gt_value(24, tlm_mon_eu_adapter.eu[12], "Vehicle State TotalMomentum_BDYX > 0.01");
		create_in_condition(24, 24, "Vehicle State TotalMomentum_BDYX > 0.01", "VEH_TOTALMOMENTUM_BDYX_GT_V0");
		create_cond_eu_lt_value(25, tlm_mon_eu_adapter.eu[12], "Vehicle State TotalMomentum_BDYX < -0.01");
		create_in_condition(25, 25, "Vehicle State TotalMomentum_BDYX < -0.01", "VEH_TOTALMOMENTUM_BDYX_LT_V0");
		create_cond_eu_gt_value(26, tlm_mon_eu_adapter.eu[13], "Vehicle State TotalMomentum_BDYY > 0.01");
		create_in_condition(26, 26, "Vehicle State TotalMomentum_BDYY > 0.01", "VEH_TOTALMOMENTUM_BDYY_GT_V0");
		create_cond_eu_lt_value(27, tlm_mon_eu_adapter.eu[13], "Vehicle State TotalMomentum_BDYY < -0.01");
		create_in_condition(27, 27, "Vehicle State TotalMomentum_BDYY < -0.01", "VEH_TOTALMOMENTUM_BDYY_LT_V0");
		create_cond_eu_gt_value(28, tlm_mon_eu_adapter.eu[14], "Vehicle State TotalMomentum_BDYZ > 0.01");
		create_in_condition(28, 28, "Vehicle State TotalMomentum_BDYZ > 0.01", "VEH_TOTALMOMENTUM_BDYZ_GT_V0");
		create_cond_eu_lt_value(29, tlm_mon_eu_adapter.eu[14], "Vehicle State TotalMomentum_BDYZ < -0.01");
		create_in_condition(29, 29, "Vehicle State TotalMomentum_BDYZ < -0.01", "VEH_TOTALMOMENTUM_BDYZ_LT_V0");
		create_cond_eu_gt_value(30, tlm_mon_eu_adapter.eu[15], "All GPS OutageDur > 86400");
		create_in_condition(30, 30, "All GPS OutageDur > 86400", "SPG_OUTAGEDUR_GT_V0");
		create_cond_tlm_eq_value(31, "TLM_MON_FP_FAULT", "Telemetry Monitor Fault Indication == 0");
		create_in_condition(31, 31, "Telemetry Monitor Fault Indication == 0", "TLM_MON_FP_FAULT_EQ_V0");
		create_cond_eu_eq_value(32, tlm_mon_eu_adapter.eu[17], "ODY Data Recorder RcdrStatePct == 0");
		create_in_condition(32, 32, "ODY Data Recorder RcdrStatePct == 0", "OSD_RCDRSTATEPCT_EQ_V0");
	}

endif


ifdef SECTION_1

	select tlm_mon_fp
	{
		cond_threshold[0] = 1.75e-1;
		in_condition_persist_limit[0] = 600;
		exit_condition_persist_limit[0] = 600;
		condition_level[0] = 4;
		cond_threshold[1] = -1.75e-1;
		in_condition_persist_limit[1] = 600;
		exit_condition_persist_limit[1] = 600;
		condition_level[1] = 4;
		cond_threshold[2] = 1.75e-1;
		in_condition_persist_limit[2] = 600;
		exit_condition_persist_limit[2] = 600;
		condition_level[2] = 4;
		cond_threshold[3] = -1.75e-1;
		in_condition_persist_limit[3] = 600;
		exit_condition_persist_limit[3] = 600;
		condition_level[3] = 4;
		cond_threshold[4] = 1.75e-1;
		in_condition_persist_limit[4] = 600;
		exit_condition_persist_limit[4] = 600;
		condition_level[4] = 4;
		cond_threshold[5] = -1.75e-1;
		in_condition_persist_limit[5] = 600;
		exit_condition_persist_limit[5] = 600;
		condition_level[5] = 4;
		cond_threshold[6] = 1.75e-2;
		in_condition_persist_limit[6] = 600;
		exit_condition_persist_limit[6] = 600;
		condition_level[6] = 4;
		cond_threshold[7] = -1.75e-2;
		in_condition_persist_limit[7] = 600;
		exit_condition_persist_limit[7] = 600;
		condition_level[7] = 4;
		cond_threshold[8] = 1.75e-2;
		in_condition_persist_limit[8] = 600;
		exit_condition_persist_limit[8] = 600;
		condition_level[8] = 4;
		cond_threshold[9] = -1.75e-2;
		in_condition_persist_limit[9] = 600;
		exit_condition_persist_limit[9] = 600;
		condition_level[9] = 4;
		cond_threshold[10] = 1.75e-2;
		in_condition_persist_limit[10] = 600;
		exit_condition_persist_limit[10] = 600;
		condition_level[10] = 4;
		cond_threshold[11] = -1.75e-2;
		in_condition_persist_limit[11] = 600;
		exit_condition_persist_limit[11] = 600;
		condition_level[11] = 4;
		cond_threshold[12] = 3.1e-1;
		in_condition_persist_limit[12] = 100;
		exit_condition_persist_limit[12] = 100;
		condition_level[12] = 4;
		cond_threshold[13] = 0.0e+0;
		in_condition_persist_limit[13] = 100;
		exit_condition_persist_limit[13] = 100;
		condition_level[13] = 4;
		cond_threshold[14] = 3.1e-1;
		in_condition_persist_limit[14] = 100;
		exit_condition_persist_limit[14] = 100;
		condition_level[14] = 4;
		cond_threshold[15] = 0.0e+0;
		in_condition_persist_limit[15] = 100;
		exit_condition_persist_limit[15] = 100;
		condition_level[15] = 4;
		cond_threshold[16] = 3.1e-1;
		in_condition_persist_limit[16] = 100;
		exit_condition_persist_limit[16] = 100;
		condition_level[16] = 4;
		cond_threshold[17] = 0.0e+0;
		in_condition_persist_limit[17] = 100;
		exit_condition_persist_limit[17] = 100;
		condition_level[17] = 4;
		cond_threshold[18] = 3.1e-1;
		in_condition_persist_limit[18] = 100;
		exit_condition_persist_limit[18] = 100;
		condition_level[18] = 4;
		cond_threshold[19] = 0.0e+0;
		in_condition_persist_limit[19] = 100;
		exit_condition_persist_limit[19] = 100;
		condition_level[19] = 4;
		cond_threshold[20] = 3.1e-1;
		in_condition_persist_limit[20] = 100;
		exit_condition_persist_limit[20] = 100;
		condition_level[20] = 4;
		cond_threshold[21] = 0.0e+0;
		in_condition_persist_limit[21] = 100;
		exit_condition_persist_limit[21] = 100;
		condition_level[21] = 4;
		cond_threshold[22] = 3.1e-1;
		in_condition_persist_limit[22] = 100;
		exit_condition_persist_limit[22] = 100;
		condition_level[22] = 4;
		cond_threshold[23] = 0.0e+0;
		in_condition_persist_limit[23] = 100;
		exit_condition_persist_limit[23] = 100;
		condition_level[23] = 4;
		cond_threshold[24] = 1.0e-2;
		in_condition_persist_limit[24] = 600;
		exit_condition_persist_limit[24] = 600;
		condition_level[24] = 4;
		cond_threshold[25] = -1.0e-2;
		in_condition_persist_limit[25] = 600;
		exit_condition_persist_limit[25] = 600;
		condition_level[25] = 4;
		cond_threshold[26] = 1.0e-2;
		in_condition_persist_limit[26] = 600;
		exit_condition_persist_limit[26] = 600;
		condition_level[26] = 4;
		cond_threshold[27] = -1.0e-2;
		in_condition_persist_limit[27] = 600;
		exit_condition_persist_limit[27] = 600;
		condition_level[27] = 4;
		cond_threshold[28] = 1.0e-2;
		in_condition_persist_limit[28] = 600;
		exit_condition_persist_limit[28] = 600;
		condition_level[28] = 4;
		cond_threshold[29] = -1.0e-2;
		in_condition_persist_limit[29] = 600;
		exit_condition_persist_limit[29] = 600;
		condition_level[29] = 4;
		cond_threshold[30] = 8.64e+4;
		in_condition_persist_limit[30] = 1;
		exit_condition_persist_limit[30] = 1;
		condition_level[30] = 4;
		cond_strcmp[31] = "1";
		in_condition_persist_limit[31] = 0;
		exit_condition_persist_limit[31] = 0;
		condition_level[31] = 4;
		in_condition_seq[31] = "op_safemode_start";
		cond_threshold[32] = 0.0e+0;
		in_condition_persist_limit[32] = 0;
		exit_condition_persist_limit[32] = 0;
		condition_level[32] = 0;
		in_condition_seq[32] = "TrackOtherSat";
	}

endif


ifdef SECTION_2

	select tlm_mon_fp
	{
		finalize();
	}

endif


ifdef SECTION_3

	select tlm_mon_fp
	{
		set_all_detections_enable(1);
		set_all_responses_enable(1);
		set_master_detections_enable(1);
		set_master_responses_enable(1);
	}

endif


