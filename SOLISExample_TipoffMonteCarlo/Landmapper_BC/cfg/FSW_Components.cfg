############################################
## FSW_Components.cfg
############################################

ifdef SECTION_CREATE

	select sub_system_adcs
	{
		create FSW_ActProc_MT FSW_ActProc_MT_Magnetic_Torquers_Set;
		create FSW_ActProc_RW FSW_ActProc_RW_Reaction_Wheels_Set;
		create FSW_AttDetermination FSW_AttDetermination;
		create FSW_Ctrl_Attitude FSW_Ctrl_Attitude;
		create FSW_Ctrl_ErrorGen FSW_Ctrl_ErrorGen;
		create FSW_Ctrl_FeedForward FSW_Ctrl_FeedForward;
		create FSW_Ctrl_Mix FSW_Ctrl_Mix;
		create FSW_Ctrl_Momentum FSW_Ctrl_Momentum;
		create FSW_Ephemeris FSW_Ephemeris;
		create FSW_Guidance FSW_Guidance;
		create FSW_ModeController FSW_ModeController;
		create FSW_SenProc_GPS FSW_SenProc_GPS;
		create FSW_SenProc_IMU FSW_SenProc_IMU;
		create FSW_SenProc_MAG FSW_SenProc_MAG;
		create FSW_SenProc_STR FSW_SenProc_STR;
		create FSW_SenProc_SUN FSW_SenProc_SUN;
		create FSW_VehicleState FSW_VehicleState;
	}

	select sub_system_cmdtlm
	{
		create cmd_history_master cmd_hist;
		create cmd_tlm_db cmd_tlm_db;
		create event_reporting event_reporting;
		create last_stored_tlm last_stored_tlm;
		create misc misc;
		create basic_heap rec_packet_heap;
		create recorded_packet_tlm rec_packet_payload;
		create tlm_eu_adapter tlm_mon_eu_adapter;
		create fpu_subsystem_mon tlm_mon_fp;
	}

	select sub_system_seqeng
	{
		create flight_jas fj;
		create basic_heap fj_heap;
	}

endif


ifdef SECTION_CONNECT

	select fj
	{
		heap = fj_heap.heap;
		last_stored_tlm = last_stored_tlm.last_stored_tlm;
	}

	select FSW_ActProc_MT_Magnetic_Torquers_Set
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_MAG = FSW_SenProc_MAG.FSW_SenProc_MAG;
	}

	select FSW_AttDetermination
	{
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_Rate = FSW_SenProc_IMU.FSW_SenProc_RTE;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select FSW_Ctrl_Attitude
	{
		Connection_FSW_Ctrl_ErrorGen = FSW_Ctrl_ErrorGen.FSW_Ctrl_ErrorGen;
		Connection_FSW_Ctrl_FeedForward = FSW_Ctrl_FeedForward.GEN_TorqueVector;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
	}

	select FSW_Ctrl_ErrorGen
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
	}

	select FSW_Ctrl_FeedForward
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
		Connection_FSW_MassProps = FSW_VehicleState.BASE_VehicleState;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
		Connection_FSW_VehicleState = FSW_VehicleState.FSW_VehicleState;
	}

	select FSW_Ctrl_Mix
	{
		Connection_AvailableCtrlActSets[0] = FSW_ActProc_RW_Reaction_Wheels_Set.FSW_ActProc_TrqCmd;
		Connection_AvailableCtrlActSets[1] = FSW_ActProc_MT_Magnetic_Torquers_Set.FSW_ActProc_TrqCmd;
		Connection_GEN_ControllerTrqCmd[0] = FSW_Ctrl_Attitude.GEN_ControllerTrqCmd;
		Connection_GEN_ControllerTrqCmd[1] = FSW_Ctrl_Momentum.GEN_ControllerTrqCmd;
	}

	select FSW_Ctrl_Momentum
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
		Connection_FSW_VehicleState = FSW_VehicleState.FSW_VehicleState;
	}

	select FSW_Ephemeris
	{
		Connection_EarthCelestialBody = UTL_CelestialBody_Earth.UTL_CentralBody;
		Connection_FOB_EphemTable = FOB_EphemTable.FOB_EphemTable;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_SenProc_GPS = FSW_SenProc_GPS.FSW_SenProc_GPS;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	select FSW_Guidance
	{
		Connection_FSC_Gui_Mode[0] = FSC_Gui_Idle.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[1] = FSC_Gui_Hold.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[2] = FSC_Gui_RateDamp.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[3] = FSC_Gui_SunAcq.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[4] = FSC_Gui_Tracking.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[5] = FSC_Gui_EigenSlew.FSC_Gui_Mode;
		Connection_FSC_Gui_Mode[6] = FSC_Gui_RendezSlew.FSC_Gui_Mode;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_ModeController = FSW_ModeController.FSW_ModeController;
	}

	select FSW_ModeController
	{
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_Gui_Cmd = FSW_Guidance.FSW_Gui_Cmd;
		Connection_SeqControl = fj.seq_control;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
		container_CelestialBody_data = UTL_FSWInitialConditions.container_celestialbody_data;
	}

	select FSW_SenProc_GPS
	{
		Connection_FSC_SenProc_GPS[0] = FSC_SenProc_GPS_GPS.FSC_SenProc_GPS;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	FSW_SenProc_IMU.Connection_FSC_SenProc_IMU[0] = FSC_SenProc_IMU_MPU.FSC_SenProc_IMU;

	select FSW_SenProc_MAG
	{
		Connection_FSC_SenProc_MAG[0] = FSC_SenProc_MAG_Mag_FCHMC.FSC_SenProc_MAG;
		Connection_FSW_ActProc_MT[0] = FSW_ActProc_MT_Magnetic_Torquers_Set.FSW_ActProc_MT;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
	}

	select FSW_SenProc_STR
	{
		Connection_FSC_SenProc_STR[0] = FSC_SenProc_STR_Sinclair_STR.FSC_SenProc_STR;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
	}

	select FSW_SenProc_SUN
	{
		Connection_FSC_SenProc_SUN[0] = FSC_SenProc_SUN_SunSens_Mx.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[1] = FSC_SenProc_SUN_SunSens_Px.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[2] = FSC_SenProc_SUN_SunSens_My.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[3] = FSC_SenProc_SUN_SunSens_Py.FSC_SenProc_SUN;
		Connection_FSC_SenProc_SUN[4] = FSC_SenProc_SUN_SunSens_Mz.FSC_SenProc_SUN;
	}

	select FSW_VehicleState
	{
		Connection_ActuatorMomentum_BDY[0] = HWR_ActMgr_RW.TotalActMomentum_BDY;
		Connection_FSW_AttDetermination = FSW_AttDetermination.FSW_AttDetermination;
		Connection_FSW_Ctrl_Attitude = FSW_Ctrl_Attitude.FSW_Ctrl_Attitude;
		Connection_FSW_Ctrl_ErrorGen = FSW_Ctrl_ErrorGen.FSW_Ctrl_ErrorGen;
		Connection_FSW_Ctrl_Momentum = FSW_Ctrl_Momentum.FSW_Ctrl_Momentum;
		Connection_FSW_Ephemeris = FSW_Ephemeris.FSW_Ephemeris;
		Connection_FSW_SenProc_SunVec[0] = FSW_SenProc_SUN.FSW_SenProc_SunVec;
		Connection_MomentumCmd_BDY = FSW_Ctrl_Momentum.MomentumCmd;
		Connection_UTL_FSWInitialConditions = UTL_FSWInitialConditions.UTL_FSWInitialConditions;
	}

	rec_packet_payload.heap = rec_packet_heap.heap;

	tlm_mon_eu_adapter.last_stored_tlm = last_stored_tlm.last_stored_tlm;

	select tlm_mon_fp
	{
		cmd_fj_engine = fj.seq_control;
		last_stored_tlm = last_stored_tlm.last_stored_tlm;
	}

endif


ifdef SECTION_0

	select cmd_hist
	{
		msg_q_depth = 200;
		msg_q_create_flags = 0;
		cmd_hist_depth = 100;
		cmd_hist_max_text_bytes = 255;
		cmd_hist_temp_dir = "../rec_tlm/cmd_hist/";
		cmd_hist_file_dir = "../rec_tlm/cmd_hist/not_sent/";
		cmd_hist_auto_dump_active = 1;
		create_evrs = 1;
	}

	select cmd_tlm_db
	{
		dir = "../cmd_tlm_db";
	}

	select event_reporting
	{
		add_level(1);
		add_level(2);
		add_level(3);
		add_level(4);
		add_level(5);
		add_level(6);
		add_level(7);
		add_level(8);
		add_level(9);
	}

	select fj
	{
		cmd_file_dir = "../seq/";
		engine_apid_base = 9010;
		max_statements_per_cycle = 5;
		num_engines = 50;
	}

	select FSW_ActProc_MT_Magnetic_Torquers_Set
	{
		B_IsEnabled = 1;
		E_MagFieldSource = 0; # 0: Model Only, 1: Measurement Only, 2: Both Model And Magnetometer
		E_MTCmdMode = 1; # 0: Constant, 1: Dynamic
		D_TotalMagneticPeriod_s = 1.0e+1;
		D_CommandPeriod_s = 1.0e+0;
		D_QuiescentPeriod_s = 1.0e+0;
		D_MaxPulseWidthFrac = 1.0e+0;
		D_MeasurementTimeout_s = 6.0e+1;
		B_SaturationPreservesDir = 1;
		B_QuiescentIfMTOff = 1;
		ActsInSet("MagCoil_Py", FSC_ActProc_MT_MagCoil_Py.FSC_ActProc_MT, 1); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled
		ActsInSet("MagCoil_Mz", FSC_ActProc_MT_MagCoil_Mz.FSC_ActProc_MT, 1); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled
		ActsInSet("MagCoil_Px", FSC_ActProc_MT_MagCoil_Px.FSC_ActProc_MT, 1); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled
		ActsInSet("MagCoil_Mx", FSC_ActProc_MT_MagCoil_Mx.FSC_ActProc_MT, 1); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled
		ActsInSet("MagCoil_My", FSC_ActProc_MT_MagCoil_My.FSC_ActProc_MT, 1); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled
	}

	select FSW_ActProc_RW_Reaction_Wheels_Set
	{
		B_IsEnabled = 1; # Enable Actuator Set
		E_WheelSpeedState = 0; # 0: BYPASS, 1: COMPENSATE, 2: GOTO_SPEED, 3: HOLD_SPEED, 4:SPD_EXTERNAL
		B_NullSpcCntrlEnabled = 0;
		D_NullSpcMomBias_Nms = 1.0e-3;
		D_NullSpcCntrGain_1ps = 5.0e+0;
		D_NullSpcTrqDB_Nm = 1.0e-4;
		D_NullSpcTrqLim_Nm = 4.0e-4;
		ActsInSet("RW_Px", FSC_ActProc_RW_RW_Px.FSC_ActProc_RW, 1, 0.0e+0); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled,D_NullVecComponent
		ActsInSet("RW_Py", FSC_ActProc_RW_RW_Py.FSC_ActProc_RW, 1, 0.0e+0); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled,D_NullVecComponent
		ActsInSet("RW_Mz", FSC_ActProc_RW_RW_Mz.FSC_ActProc_RW, 1, 0.0e+0); # Actuator Name, FSC_ActProc Interface, B_ActuatorEnabled,D_NullVecComponent
	}

	select FSW_AttDetermination
	{
		E_FilterLevel = 2; # 0: Perfect-AD, 1: Fixed-Gain, 2: Kalman Filter
		I_InitFramesReq = 2;
		D_InitMeasTimeWindow_s = 1.0e+1;
		D_InitSensorPersistDur_s = 1.0e+0;
		D_InitAttConsist_rd = 1.74532925199433e-1;
		D_InitReqSepAngle_rd = 5.23598775598299e-1;
		D_EstRateBiasLim_rdps = 8.72664625997165e-2;
		D_InitAttCov_rd = 1.74532925199433e-2;
		D_InitRateBiasCov_rdps = 1.74532925199433e-2;
		D_RateMeasNoise_rdps = 2.61799387799149e-4;
		D_RateDriftMeasNoise_rdpsrthr = 3.49065850398866e-7;
		Q_InitUndetAtt = [ 0.0e+0 0.0e+0 0.0e+0 1.0e+0 ];
		B_EnableRateBiasEst = 1;
		D_RateBiasTimeConst_s = 1.0e+2;
		B_UseForInit[0] = 1; # SunSens_Mx
		D_TimeConst_s[0] = 0.0e+0; # SunSens_Mx: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[0] = 1.74532925199433e-3; # SunSens_Mx: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[0] = 1.74532925199433e-3; # SunSens_Mx: Kalman Filter Variable
		D_ResidLimit_rd[0] = 1.74532925199433e-1; # SunSens_Mx: Kalman Filter Variable
		D_AttGainLim[0] = 1.0e+0; # SunSens_Mx: Kalman Filter Variable
		D_RBGainLim[0] = 1.0e+0; # SunSens_Mx: Kalman Filter Variable
		E_IncorpMethod[0] = 0; # SunSens_Mx: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[1] = 1; # SunSens_Px
		D_TimeConst_s[1] = 0.0e+0; # SunSens_Px: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[1] = 1.74532925199433e-3; # SunSens_Px: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[1] = 1.74532925199433e-3; # SunSens_Px: Kalman Filter Variable
		D_ResidLimit_rd[1] = 1.74532925199433e-1; # SunSens_Px: Kalman Filter Variable
		D_AttGainLim[1] = 1.0e+0; # SunSens_Px: Kalman Filter Variable
		D_RBGainLim[1] = 1.0e+0; # SunSens_Px: Kalman Filter Variable
		E_IncorpMethod[1] = 0; # SunSens_Px: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[2] = 1; # SunSens_My
		D_TimeConst_s[2] = 0.0e+0; # SunSens_My: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[2] = 1.74532925199433e-3; # SunSens_My: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[2] = 1.74532925199433e-3; # SunSens_My: Kalman Filter Variable
		D_ResidLimit_rd[2] = 1.74532925199433e-1; # SunSens_My: Kalman Filter Variable
		D_AttGainLim[2] = 1.0e+0; # SunSens_My: Kalman Filter Variable
		D_RBGainLim[2] = 1.0e+0; # SunSens_My: Kalman Filter Variable
		E_IncorpMethod[2] = 0; # SunSens_My: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[3] = 1; # SunSens_Py
		D_TimeConst_s[3] = 0.0e+0; # SunSens_Py: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[3] = 1.74532925199433e-3; # SunSens_Py: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[3] = 1.74532925199433e-3; # SunSens_Py: Kalman Filter Variable
		D_ResidLimit_rd[3] = 1.74532925199433e-1; # SunSens_Py: Kalman Filter Variable
		D_AttGainLim[3] = 1.0e+0; # SunSens_Py: Kalman Filter Variable
		D_RBGainLim[3] = 1.0e+0; # SunSens_Py: Kalman Filter Variable
		E_IncorpMethod[3] = 0; # SunSens_Py: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[4] = 1; # SunSens_Mz
		D_TimeConst_s[4] = 0.0e+0; # SunSens_Mz: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[4] = 1.74532925199433e-3; # SunSens_Mz: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[4] = 1.74532925199433e-3; # SunSens_Mz: Kalman Filter Variable
		D_ResidLimit_rd[4] = 1.74532925199433e-1; # SunSens_Mz: Kalman Filter Variable
		D_AttGainLim[4] = 1.0e+0; # SunSens_Mz: Kalman Filter Variable
		D_RBGainLim[4] = 1.0e+0; # SunSens_Mz: Kalman Filter Variable
		E_IncorpMethod[4] = 0; # SunSens_Mz: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[5] = 1; # Mag_FCHMC
		D_TimeConst_s[5] = 1.8e+3; # Mag_FCHMC: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[5] = 1.74532925199433e-2; # Mag_FCHMC: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[5] = 1.74532925199433e-2; # Mag_FCHMC: Kalman Filter Variable
		D_ResidLimit_rd[5] = 1.74532925199433e-1; # Mag_FCHMC: Kalman Filter Variable
		D_AttGainLim[5] = 1.0e+0; # Mag_FCHMC: Kalman Filter Variable
		D_RBGainLim[5] = 1.0e+0; # Mag_FCHMC: Kalman Filter Variable
		E_IncorpMethod[5] = 1; # Mag_FCHMC: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		B_UseForInit[6] = 1; # Sinclair_STR
		D_TimeConst_s[6] = 1.0e+0; # Sinclair_STR: Fixed-Gain Filter Variable
		D_MeasSigmaBore_rd[6] = 2.66647523252766e-4; # Sinclair_STR: Kalman Filter Variable
		D_MeasSigmaOffBore_rd[6] = 2.4240668541439e-5; # Sinclair_STR: Kalman Filter Variable
		D_ResidLimit_rd[6] = 1.74532925199433e-1; # Sinclair_STR: Kalman Filter Variable
		D_AttGainLim[6] = 1.0e+0; # Sinclair_STR: Kalman Filter Variable
		D_RBGainLim[6] = 1.0e+0; # Sinclair_STR: Kalman Filter Variable
		E_IncorpMethod[6] = 2; # Sinclair_STR: 0: None, 1: Attitude Only, 2: Attitude and Rate Bias
		ADSensors("SunSens_Mx", FSC_SenProc_SUN_SunSens_Mx.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Px", FSC_SenProc_SUN_SunSens_Px.FSW_SenProc_ADSensor);
		ADSensors("SunSens_My", FSC_SenProc_SUN_SunSens_My.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Py", FSC_SenProc_SUN_SunSens_Py.FSW_SenProc_ADSensor);
		ADSensors("SunSens_Mz", FSC_SenProc_SUN_SunSens_Mz.FSW_SenProc_ADSensor);
		ADSensors("Mag_FCHMC", FSC_SenProc_MAG_Mag_FCHMC.FSW_SenProc_ADSensor);
		ADSensors("Sinclair_STR", FSC_SenProc_STR_Sinclair_STR.FSW_SenProc_ADSensor);
	}

	select FSW_Ephemeris
	{
		Q_TODtoJ2000 = [ -2.00485613309735e-5 -8.36628103438893e-4 1.92552571049745e-3 9.99997795998676e-1 ];
		D_MaxPropagationTime_s = 1.08e+4;
		B_AllowBackProp = 1;
		B_IncludeNonGravAcc = 0;
		E_EphemSource = 1; # 0: Table, 1: GPS
		AddEphemTarget("GeneralTarget", FOB_Target_GeneralTarget.FOB_Target);
		AddEphemTarget("OrbitTarget", FOB_Target_OrbitTarget.FOB_Target);
	}

	select FSW_ModeController
	{
		B_InitRateDampOnAcq = 0;
		S_InitAttDetSeq = "";
		S_InitAttUnDetSeq = "";
		AddIdleMode("Idle");
		AddHoldMode("Hold", FOB_ModeType_Hold_Hold.FOB_ModeParms_Hold, FOB_ModeType_Hold_Hold.FOB_ModeParms_Tracking);
		AddRateDampMode("RateDamp", FOB_ModeType_RateDamp_RateDamp.FOB_ModeParms_RateDamp);
		AddSunAcqMode("SunAcq", FOB_ModeType_SunAcq_SunAcq.FOB_ModeParms_SunAcq);
		AddTrackingMode("InertialPoint", FOB_ModeType_Tracking_InertialPoint.FOB_ModeParms_Tracking);
		AddTrackingMode("SunTrack", FOB_ModeType_Tracking_SunTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("NadirTrack", FOB_ModeType_Tracking_NadirTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("VelocityTrack", FOB_ModeType_Tracking_VelocityTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("MagFieldTrack", FOB_ModeType_Tracking_MagFieldTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("TargetTrack", FOB_ModeType_Tracking_TargetTrack.FOB_ModeParms_Tracking);
		AddTrackingMode("OrbitTrack", FOB_ModeType_Tracking_OrbitTrack.FOB_ModeParms_Tracking);
		AddEigenSlewMode("EigenSlew", FOB_Mode_SlewLimitsBdy_BodyLimits.FOB_Mode_SlewLimits);
		AddRendezSlewMode("RendezSlew", FOB_Mode_SlewLimitsBdy_BodyLimits.FOB_Mode_SlewLimits);
	}

	select FSW_SenProc_GPS
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid
		D_OutageTimeThreshold_s = 5.4e+3;
		D_PosErrLimUnconv_m = 5.0e+3;
		D_VelErrLimUnconv_mps = 1.0e+2;
		D_PosErrLimConv_m = 1.0e+3;
		D_VelErrLimConv_mps = 5.0e+1;
		D_PosErrGain = 1.0e-2;
		D_VelErrGain = 1.0e-2;
		D_PosErrLimOutageSlope_mps = 5.0e-1;
		D_VelErrLimOutageSlope_mps2 = 1.0e-1;
		D_MaxTimeToConverge_s = 9.0e+2;
		I_NumMeasToConverge = 10;
		I_NumMeasToDiverge = 10;
		I_NumMeasToRecoverOutage = 2;
	}

	select FSW_SenProc_IMU
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid
	}

	select FSW_SenProc_MAG
	{
		MAG_SS4B_tlmprefix = "SPM_";
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid
	}

	select FSW_SenProc_SUN
	{
		E_SelectionMethod = 0; # 0: FirstValid, 1: RankedList, 2: BlendAllValid, 3: HighestQuality
	}

	select FSW_VehicleState
	{
		M_StaticInertia_BDYCM_kgm2 = [ [ 9.4457e-2 -1.2575e-4 -9.348e-4 ][ -1.2575e-4 1.7821e-1 1.7159e-4 ][ -9.348e-4 1.7159e-4 1.168e-1 ] ];
		D_SunLostPersistTime_s = 1.2e+3;
		I_SunBufferSize = 3;
		D_SunBufferConsistencyAngle_rd = 5.23598775598299e-2;
		D_EclipseKOZAngle_rd = 0.0e+0;
		BusConfigs("Baseline", UTL_MassProps_Bus.UTL_MassProps);
		AttControllers("Standard", FOB_CtrlParms_Attitude_Standard.FOB_CtrlParms_Attitude);
		MomControllers("Standard", FOB_CtrlParms_Momentum_Standard.FOB_CtrlParms_Momentum);
		MissionModes("NORMAL_OPS");
		MissionModes("SAFE_MODE");
	}

	select misc
	{
		config_dir = "../cfg";
	}

	select tlm_mon_eu_adapter
	{
		add_monitored_tlm(0, "GSA_SUNCONVERGED");
	}

	select tlm_mon_fp
	{
		condition_level_name[0] = "GREEN";
		condition_level_name[1] = "BLUE";
		condition_level_name[2] = "YELLOW";
		condition_level_name[3] = "ORANGE";
		condition_level_name[4] = "RED";
		create_cond_tlm_eq_value(0, "GSA_SUNCONVERGED", "SunAcq SunConverged == 1");
		create_in_condition(0, 0, "SunAcq SunConverged == 1", "GSA_SUNCONVERGED_EQ_V0");
	}

endif


ifdef SECTION_1

	select tlm_mon_fp
	{
		cond_strcmp[0] = "True";
		in_condition_persist_limit[0] = 100;
		exit_condition_persist_limit[0] = 0;
		condition_level[0] = 0;
		in_condition_seq[0] = "StopSimulation";
	}

endif


ifdef SECTION_2

	select tlm_mon_fp
	{
		finalize();
	}

endif


ifdef SECTION_3

	select tlm_mon_fp
	{
		set_all_detections_enable(1);
		set_all_responses_enable(1);
		set_master_detections_enable(1);
		set_master_responses_enable(1);
	}

endif


